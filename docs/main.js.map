{"version":3,"sources":["./src/app/userpage/index.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/_helpers/fake-backend.ts","./src/app/baking/baking.component.ts","./src/app/baking/baking.component.html","./src/app/_services/index.ts","./src/app/_components/alert.component.ts","./src/app/_components/alert.component.html","./src/app/test/test.component.ts","./src/app/test/test.component.html","./src/app/login/index.ts","./src/app/_components/index.ts","./src/app/draw/draw.component.ts","./src/app/draw/draw.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_services/user.service.ts","./src/app/_helpers/index.ts","./src/app/userpage/userpage.component.ts","./src/app/userpage/userpage.component.html","./src/app/app.module.ts","./src/app/comments/comments.component.ts","./src/app/comments/comments.component.html","./src/app/_services/alert.service.ts","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/_helpers/jwt.interceptor.ts","./src/app/register/index.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/auth.guard.ts","./src/app/_services/authentication.service.ts","./src/app/comments/index.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/home/index.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export * from './userpage.component';","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { UserService, AuthenticationService, AlertService } from '../_services';\n\n@Component({ \n    templateUrl: 'register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    registerForm: FormGroup;\n    loading = false;\n    submitted = false;\n    //error: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private userService: UserService,\n        private alertService: AlertService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/userpage']);\n        }\n    }\n\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            username: ['', Validators.required],\n            password: ['', [Validators.required, Validators.minLength(6)]]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.registerForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.registerForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.userService.register(this.registerForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('Registration successful', true);\n                    this.router.navigate(['/login'], { queryParams: { registered: true }});\n                },\n                error => {\n                    //this.error = error;\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n}","<!--<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>-->\n<link href=\"https://fonts.googleapis.com/css2?family=Dancing+Script&display=swap\" rel=\"stylesheet\">\n\n<header class=\"masthead\">\n    <!--flying birds-->\n    <div class=\"bird-container bird-container--one\">\n        <div class=\"bird bird--one\"></div>\n    </div>\n    <div class=\"bird-container bird-container--two\">\n        <div class=\"bird bird--two\"></div>\n    </div>   \n    <div class=\"bird-container bird-container--three\">\n        <div class=\"bird bird--three\"></div>\n    </div>\n    <div class=\"bird-container bird-container--four\">\n        <div class=\"bird bird--four\"></div>\n\t</div>\n\n    <div class=\"container d-flex h-100 align-items-center\">\n        <div class=\"mx-auto text-center\">\n        <br>\n        <h1 class=\"mx-auto my-0 text-uppercase\">REGISTER</h1> \n        <br>\n        <p> For testing API, Authentication, JWT token feature purpose only :)\n        \n        </p>\n        <br>\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"firstName\" style=\"color: white\">First Name</label>\n                <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n                \n                <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"lastName\" style=\"color: white\">Last Name</label>\n                <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n                <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"username\" style=\"color: white\">Username</label>\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\" style=\"color: white\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button [disabled]=\"loading\" class=\"btn btn-primary\" style=\"background-color:#A3E4D7\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Register\n                </button>\n                <a routerLink=\"/login\" class=\"btn btn-link\" style=\"color:#A3E4D7\">Cancel</a>\n            </div>\n        </form>\n        </div>\n    </div>\n</header>\n","import { Component} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n//import { Router } from '@angular/router';\nimport { Visitor } from '../visitor';\n\n@Component({ \n    selector: 'app-home',\n    templateUrl: 'home.component.html',\n    styleUrls: ['./home.component.css','./addition.css'] \n})\nexport class HomeComponent {\n    //currentUser: any;\n    constructor(\n        //private router: Router,\n        //public name : string,\n        //public type : string,\n        //private formBuilder: FormBuilder,\n    ) {\n        \n    }\n\n    // type = ['recuriter', 'friends', 'anonymous'];\n    // model = new Visitor('Your Name', this.type[2], 'github');\n    // submitted = false;\n    // ngOnInit() {  \n    //     this.registerForm = this.formBuilder.group({\n    //         comment: []\n    //     });\n    // }\n    // // convenience getter for easy access to form fields\n    // get f() { return this.registerForm.controls; }\n\n    // onSubmit() {\n    //     this.submitted = true;\n\n    //     //this.loading = true;\n    //     /*\n    //     this.userService.register(this.registerForm.value)\n    //         .pipe(first())*/\n            \n    // }\n    // registerForm: FormGroup;\n    // loading = false;\n    // //submitted = false;\n    // //remove when down\n    // get diagnostic() { return JSON.stringify(this.model); }\n\n \n    \n\n    \n}\n","<header class=\"masthead\">\n    <!--flying birds-->\n    <div class=\"bird-container bird-container--one\">\n        <div class=\"bird bird--one\"></div>\n    </div>\n    <div class=\"bird-container bird-container--two\">\n        <div class=\"bird bird--two\"></div>\n    </div>   \n    <div class=\"bird-container bird-container--three\">\n        <div class=\"bird bird--three\"></div>\n    </div>\n    <div class=\"bird-container bird-container--four\">\n        <div class=\"bird bird--four\"></div>\n\t</div>\n\n    <div class=\"container d-flex h-100 align-items-center\">\n        <div class=\"mx-auto text-left\">\n            <h1 class=\"mx-auto my-0\">\n                I am a full stack developer, designer, and illustrator; Studied at Rutgers University with a double major in Computer Science and Finance;\n                <br>Have interest in so many things that I want to explore them all!\n            </h1> \n            <br>\n            \n            <p class=\"text-white-50 mx-auto mt-2 mb-5\" style=\"text-align:left;\" >\n                <b>Skill Set : <br>\n                Programming Language : </b> Java, Python, C, Latex, C#, SQL, JavaScript, TypeScript, HTML, CSS <br>\n                <b>Frameworks : </b>.NET Core, Angular, Angular-Cli, Entity Framework Core, ASP.NET Core Web API, Bootstrap<br> \n\n            </p>\n            <a href=\"#\" class=\"mx-2\">\n                <a href=\"https://github.com/SatitaVitt\"><i class=\"fab fa-github\"></i> GITHUB </a>\n\n            </a>\n            <a href=\"#\" class=\"mx-2\">\n                <a href=\"mailto:sv439@scarletmail.rutgers.edu?subject=Suggestions your website~\"><i class=\"far fa-paper-plane\"></i> EMAIL </a>\n            </a>\n             <a href=\"#\" class=\"mx-2\">\n                <a href=\"https://www.instagram.com/satitavv/\"><i class=\"fab fa-instagram\"></i> INSTAGRAM </a>\n            </a>\n        \n            <div class=\"arrows\"></div>\n            <div class=\"bottomright\">\n                <img src=\"assets/img/ZEPETO_CAPTURE 6.PNG\" alt=\"\" width=306px height=546px>\n            </div>\n\n        </div>\n    </div>\n</header>\n\n<!-- About Section -->\n<section id=\"about\" class=\"about-section text-center\">\n    <div class=\"container\">\n        <p  class=\"mb-0 text-black-50\">Hello and Welcome to my personal website! \n        <br>Here you will see some of my game developments and previous project explained in details. \n        <br>Feel free to leave a comment or suggestions by clicking the Comment Section on the NavBar on the top ;)</p>\n        <br>\n        <br>\n        <!--\n        <div class=\"row\">\n            <div class=\"col-lg-8 mx-auto\">\n                <div class=\"form-group\">\n                <label for=\"name\">Name</label>\n                <input type=\"text\" class=\"form-control\" id=\"name\"\n                        required\n                        [(ngModel)]=\"model.name\" name=\"name\">\n                </div>\n                <div class = \"form-group\">\n                    <label for = \"type\"> Visitor type </label>\n                    <select class = \"form-control\" id = \"type\" required>\n                        \n                        <option *ngFor=\"let ty of type\" [value]=\"ty\">{{ty}}</option>\n                    </select> \n                </div>\n                <div class=\"form-group\">\n                <label for=\"name\">How did you get here?</label>\n                <input type=\"text\" class=\"form-control\" id=\"directed\"\n                        required\n                        [(ngModel)]=\"model.name\" name=\"directed\">\n                    <br>\n                    <button> Totally optional :) </button>-->\n                    <!--need to add mailto link later-->\n                    <!--\n                </div>\n                \n            </div>\n        </div>\n        -->\n    </div>\n</section>\n\n<!-- Projects Section -->\n<section id=\"project\" class=\"projects-section bg-light extend-lg\">\n    <h1>Projects</h1>\n    <div class=\"container\">       \n        <!-- Featured Project Row -->\n        <div class=\"row align-items-center no-gutters mb-4 mb-lg-5\">\n            <div class=\"col-xl-7 col-lg-6\">\n               <div class = \"d-flex justify-content-center\">\n                    <img class=\"img-fluid mb-3 mb-lg-0\" src=\"assets/img/maze01.png\" style=\"height:70%;width:70%;text-align:center;\" alt=\"\">\n                </div>\n            </div>\n        \n            <div class=\"col-xl-5 col-lg-3\">\n                <div class=\"featured-text text-center text-lg-left\">\n                    <h4>Auto-Generated Maze Game for 2 players!</h4>\n                    <p class=\"text-black-50 mb-0\">\n                    Auto generating maze and random player's positions and one final position to get, whoever meet the final goal first will be the WINNER~ \n                    <br>\n                    This game is implementing using <u>socket.io</u> for client-server communication; <br><u>Progamming Language :</u>  Html, CSS and Javascript\n                    <i>(Launching soooooon!)</i>\n                    </p>\n                </div>\n            </div>\n        </div>\n\n        <!-- Project One Row CS224U -->\n        <div class=\"row justify-content-center no-gutters mb-5 mb-lg-0\">\n            <div class=\"bg-black text-center h-100 project\">\n                \n                <div class=\"project-text w-100 my-auto text-center text-lg-left\">\n                    <h4 class=\"text-white\"><a href=\"assets/img/CS224U_Final_Paper_Spring_2022.pdf\">Multiple Model Ensemble for Cross-Lingual Question Answering</a></h4>\n                    <p class=\"mb-0 text-white-50\">\n                    As the amount of information available to the average person has increased dramatically in recent years, much progress has been made in the field of automated question answering systems. Much of this effort has gone into monolingual question answering, especially in English, due to the overwhelming presence of English-language information present on the web. It can be challenging to apply these results to languages with less readily accessible material, imposing barriers on global communities trying to find relevant information. \n                    <br>\n                    <br>In this project, we propose a novel ensemble method for utilizing large English corpora for answering questions in a variety of languages. We find that, when dealing with multilingual queries and an English only context corpus, query translation and late-interaction retrieval outperforms dense passage retrieval with a multilingual encoder.\n                    \n                    </p>\n                    <a href=\"#\" class=\"mx-2\">\n                        <a href=\"assets/img/CS224U_Final_Paper_Spring_2022.pdf\"><i class=\"far fa-file-alt\"></i> Report </a>\n                    </a>\n                    <hr class=\"d-none d-lg-block mb-0 ml-0\">                  \n            \n                </div>\n                <img src=\"assets/img/pichaqiu.gif\" alt=\"\" width=\"150\" height=\"100\" >\n                <img src=\"assets/img/pichaqiu.gif\" width=\"150\" height=\"100\"alt=\"\"  >\n            </div>\n        </div>\n\n        <!-- Project Two Row CS229 -->\n        <div class=\"row justify-content-center no-gutters mb-5 mb-lg-0\">\n            <div class=\"bg-black text-center h-100 project\">\n                \n                <div class=\"project-text w-100 my-auto text-center text-lg-left\">\n                    <h4 class=\"text-white\"><a href=\"assets/img/Imputation_of_Missing_Financial_Data.pdf\">Imputation of Missing Financial Data</a></h4>\n                    <p class=\"mb-0 text-white-50\">\n                    Missing data is a common practical problem often encountered in data collection. It is prevalent in virtually all areas and the finance industry is one of the most affected. In fact, in asset pricing studies, missing covariates like firm characteristics are frequently observed.                  \n                    <br>\n                    <br>In this project, we aim to find a better approach for imputing financial data via machine learning techniques, so that more complete data can be used for further analysis. To be more specific, we are going to use firm characteristics as our imputation target. Some important characteristics include book-to-market (B2M), operating profitability (OP), investment (INV), and leverage (LEV). \n                    <br>\n                    <br>We mainly try four different algorithms to impute missing data in these firm characteristics: Generative Adversarial Imputation Nets (GAIN), Variational Autoencoder (VAE), KNN impute algorithm, Random Forest Imputation (MissForest).\n                    </p>\n\n                    <a href=\"#\" class=\"mx-2\">\n                        <a href=\"assets/img/Imputation_of_Missing_Financial_Data.pdf\"><i class=\"far fa-file-alt\"></i> Report </a>\n                    </a>\n                    <hr class=\"d-none d-lg-block mb-0 ml-0\">                  \n            \n                </div>\n                <img src=\"assets/img/cs229_project_poster.jpg\" alt=\"CS229 Poster Section @ Stanford\"  width=\"50%\" >                \n            </div>\n        </div>\n\n        <!-- Project Three Row CS231N -->\n        <div class=\"row justify-content-center no-gutters mb-5 mb-lg-0\">\n            <div class=\"bg-black text-center h-100 project\">\n                \n                <div class=\"project-text w-100 my-auto text-center text-lg-left\">\n                    <h4 class=\"text-white\"><a href=\"assets/img/cs231n_final_report.pdf\">Self-Supervised Learning Methods on Room Type Classification</a></h4>\n                    <p class=\"mb-0 text-white-50\">\n                        As the world increasingly embraces smart home technologies and automation, the need for accurate room type classification algorithms has become paramount. These algorithms are instrumental in enhancing home automation, facilitating robot navigation, fortifying security systems, and other AI applications. Our motivation to address this challenge lies in the potential improvements these systems could bring to\n                        various domestic and commercial applications, improving lives and operational efficiency.\n                        <br>\n                        <br>The problem at hand involves developing a selfsupervised learning model that can accurately classify different room types in a dynamic domestic environment using visual input. Such a model should account for factors like furniture repositioning, lighting changes, and other environmental alterations affecting room appearances. The input to our algorithm is an image, and we leverage pre-trained self-supervised\n                        learning models like SimCLR, MAE, and DINO v2 to output a predicted room type, such as a living room, kitchen, bedroom, or bathroom.\n                        <br>\n                        <br>Supervised learning models currently in use require extensive labeled datasets, which can be costly, timeconsuming, and subject to human error. Additionally, these models struggle to generalize their learning to unseen environments. To counter these challenges, our focus is on self-supervised learning, where models learn from unlabeled data, creating useful representations for downstream tasks. We aim to utilize these representations to accurately classify room types in a dynamic environment.\n                                                \n                    </p>\n                    <a href=\"#\" class=\"mx-2\">\n                        <a href=\"assets/img/cs231n_final_report.pdf\"><i class=\"far fa-file-alt\"></i> Report </a>\n                    </a>\n                    <hr class=\"d-none d-lg-block mb-0 ml-0\">                  \n            \n                </div>\n                <img src=\"assets/img/pichaqiu.gif\" alt=\"\" width=\"150\" height=\"100\" style=\"transform: scaleX(-1)\">\n                <img src=\"assets/img/pichaqiu.gif\" width=\"150\" height=\"100\"alt=\"\" style=\"transform: scaleX(-1)\">\n            </div>\n        </div>\n\n        <!-- Project One Row -->\n        <div class=\"row justify-content-center no-gutters mb-5 mb-lg-0\">\n            <div class=\"bg-black text-center h-100 project\">\n                \n                    <div class=\"project-text w-100 my-auto text-center text-lg-left\">\n                        <h4 class=\"text-white\"><a href=\"assets/img/Fast_Tragectory_Replanning (2).pdf\">A* Algorithm Implementation and Report</a></h4>\n                        <p class=\"mb-0 text-white-50\">\n                        <b><a href=\"#game\">Problem stated : </a> </b> Finding the shortest possible path from a START (A) postion to a TARGET (T) position with randomly generated blocks\n                        <br><b><a href=\"#game\">Algorithms implemented : </a> </b> Forward A* Tracking VS. Backward A* Tracking, Heuristics in the Adapted A* Tracking\n                        <br><b><a href=\"assets/img/Fast_Tragectory_Replanning (2).pdf\">Report : </a></b> Mainly comparing all three algorithms when facing the problem of finding the shortest path. Explaining reason such as \n                        \"Why Repeated Forward A* with Adaptive A* is sometimes faster than Repeated Forward A* with A* and sometime isn't\" based on our research and implementation. \n                        \n                        </p>\n                        <hr class=\"d-none d-lg-block mb-0 ml-0\">                   \n                \n                    </div>\n                <img src=\"assets/img/pichaqiu.gif\" alt=\"\" width=\"150\" height=\"100\" >\n                <img src=\"assets/img/pichaqiu.gif\" width=\"150\" height=\"100\"alt=\"\"  >\n            </div>\n        </div>\n\n        \n    <!-- Project Two Row -->\n        <div class=\"row justify-content-center no-gutters\">\n            <div class=\"bg-black text-center h-100 project\">\n                \n                <div class=\"project-text w-100 my-auto text-center text-lg-left\">\n                    <h4 class=\"text-white\">Movie Shop Single Page Application </h4>\n                    <p class=\"mb-0 text-white-50\">This SPA is use to shop for movies, this is a full stack application where I use Angular for Frontend and .NET framework and C# for Backend and implemented API to connect in between.\n                    Having a relational database using Microsoft AQL server to hold the database and generating SQL queries using LINQ from the Backend\n                    <br><a href=\"#game\">More details : features of this project includes </a><br>\n                        1). User login/register/JWT Authenication <br>\n                        2). Users have own categories of movies sorted by favorited and purchased <br>\n                        3). Movies can be displayed by different genres <br>\n                        4). Pagination\n                        <br>\n                        <i>Github Source code are below~</i>\n\n                    </p>\n                    <a href=\"#\" class=\"mx-2\">\n                        <a href=\"https://github.com/SatitaVitt/MovieShopCoreAPI\"><i class=\"fab fa-github\"></i> API </a>\n                    </a>\n                    <a href=\"#\" class=\"mx-2\">\n                        <a href=\"https://github.com/SatitaVitt/MovieShopSPA\"> Angular SPA Frontend </a>\n                    </a>\n                    <a href=\"#\" class=\"mx-2\">\n                        <a href=\"hhttps://github.com/SatitaVitt/MovieShop\"> .NET MVC Backend </a>\n                    </a>\n                    <hr class=\"d-none d-lg-block mb-0 mr-0\">\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\n//let users = [{ id: 1, firstName: 'Satita', lastName: 'Vitt', username: 'testing', password: 'test0001' }];\n// array in local storage for registered users\nlet users = JSON.parse(localStorage.getItem('users')) || [];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const { url, method, headers, body } = request;\n\n        // wrap in delayed observable to simulate server api call\n        return of(null)\n            .pipe(mergeMap(handleRoute))\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n            .pipe(delay(500))\n            .pipe(dematerialize());\n\n        function handleRoute() {\n            switch (true) {\n                case url.endsWith('/users/authenticate') && method === 'POST':\n                    return authenticate();\n                case url.endsWith('/users/register') && method === 'POST':\n                    return register();\n                case url.endsWith('/users') && method === 'GET':\n                    return getUsers();\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n                    return deleteUser();\n                default:\n                    // pass through any requests not handled above\n                    return next.handle(request);\n            }    \n        }\n\n        // route functions\n\n        function authenticate() {\n            const { username, password } = body;\n            const user = users.find(x => x.username === username && x.password === password);\n            if (!user) return error('Username or password is incorrect');\n            return ok({\n                id: user.id,\n                username: user.username,\n                firstName: user.firstName,\n                lastName: user.lastName,\n                token: 'fake-jwt-token'\n            })\n        }\n\n        function register() {\n            const user = body\n\n            if (users.find(x => x.username === user.username)) {\n                return error('Username \"' + user.username + '\" is already taken')\n            }\n\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n            users.push(user);\n            localStorage.setItem('users', JSON.stringify(users));\n\n            return ok();\n        }\n\n        function getUsers() {\n            if (!isLoggedIn()) return unauthorized();\n            return ok(users);\n        }\n\n        function deleteUser() {\n            if (!isLoggedIn()) return unauthorized();\n\n            users = users.filter(x => x.id !== idFromUrl());\n            localStorage.setItem('users', JSON.stringify(users));\n            return ok();\n        }\n\n        // helper functions\n\n        function ok(body?) {\n            return of(new HttpResponse({ status: 200, body }))\n        }\n\n        function error(message) {\n            return throwError({ error: { message } });\n        }\n\n        function unauthorized() {\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\n        }\n\n        function isLoggedIn() {\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\n        }\n\n        function idFromUrl() {\n            const urlParts = url.split('/');\n            return parseInt(urlParts[urlParts.length - 1]);\n        }\n    }\n}\n\nexport const fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-baking',\n  templateUrl: './baking.component.html',\n  styleUrls: ['./baking.component.css']\n})\nexport class BakingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class = \"body\">\n    <div class =\"text1\">\n        <h1>All the Dessert Receipes I have Tried 💗</h1>\n        <h2><i>Click each photos to see the process of making these desserts!</i></h2>\n    </div>\n\n    <div class=\"grid-container\">\n        \n        <div>\n            <img class='grid-item grid-item-5' src='assets/bake-img/mango-nuomici.JPG' alt=''>\n            <p>\"Mango Nuomici - Almost cried while making this, so hard to put mango inside of those memorialis hirta\"</p>\n        </div>\n        <div>\n            <img class='grid-item grid-item-6' src='assets/bake-img/souffle.jpg' alt=''>\n            <p>\"Souffle! Should have put more sugar\"</p>\n        </div>\n        <div>\n            <img class='grid-item grid-item-7' src='assets/bake-img/berry-yogurt-cake.jpg' alt=''>\n            <p>\"Berry Yogurt Cake~\"</p>\n        </div>\n        \n        <div>\n            <img class='grid-item grid-item-9' src='assets/bake-img/cotton-cheese-cake.JPG' alt=''>\n            <p>\"Cotton Cheese Cake - my dad's favorite cake lol, and it is so easy to make</p>\n        </div>\n        <div>\n            <img class='grid-item grid-item-12' src='assets/bake-img/cheesecake.jpg' alt=''>\n            <p>\"Cheesecake~\"</p>\n        </div>\n        \n        <div>\n            <img class='grid-item grid-item-14' src='assets/bake-img/salmon-crepe.JPG' alt=''>\n            <p>\"Salmon Crepe - Aaaaaamazingggg who said crepe can only be sweet\"</p>\n        </div>\n        <div>\n            <img class='grid-item grid-item-15' src='assets/bake-img/glutinous-rice-balls.JPG' alt=''>\n            <p>\"Glutinous Rice Meatballs - sooo hard to steam it through\"</p>\n        </div>\n        <div>\n            <img class='grid-item grid-item-16' src='assets/bake-img/marshmallow-chip.JPG' alt=''>\n            <p>\"Marshmallow w/ Chips!\"</p>\n        </div>\n    </div>\n</div>","export * from './authentication.service';\nexport * from './user.service';\nexport * from './alert.service';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AlertService } from '../_services';\n\n@Component({ selector: 'app-alert', templateUrl: 'alert.component.html' })\nexport class AlertComponent implements OnInit, OnDestroy {\n    private subscription: Subscription;\n    message: any;\n\n    constructor(private alertService: AlertService) { }\n\n    ngOnInit() {\n        this.subscription = this.alertService.getAlert()\n            .subscribe(message => {\n                switch (message && message.type) {\n                    case 'success':\n                        message.cssClass = 'alert alert-success';\n                        break;\n                    case 'error':\n                        message.cssClass = 'alert alert-danger';\n                        break;\n                }\n\n                this.message = message;\n            });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}","<div *ngIf=\"message\" [ngClass]=\"message.cssClass\">{{message.text}}</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"contact-section navbar-expand-lg contact-section-color\" id=\"contact\">\n    <div class=\"container\">\n        <div class = \"row\">\n          <div class=\"col-md-4 mb-3 mb-md-0\">\n            <div class=\"card py-4 h-100\">\n              <div class=\"card-body text-center\">\n                <i class=\"fas fa-map-marked-alt text-primary mb-2\"></i>\n                <h4 class=\"text-uppercase m-0\">Located At</h4>\n                <hr class=\"my-4\">\n                <div class=\"small text-black-50\">The Hague, The Netherlands</div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-md-4 mb-3 mb-md-0\">\n            <div class=\"card py-4 h-100\">\n              <div class=\"card-body text-center\">\n                <i class=\"fas fa-envelope text-primary mb-2\"></i>\n                <h4 class=\"text-uppercase m-0\">Email</h4>\n                <hr class=\"my-4\">\n                <div class=\"small text-black-50\">\n                  <a href=\"#\">satita.ice.v@gmail.com</a>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-md-4 mb-3 mb-md-0\">\n            <div class=\"card py-4 h-100\">\n              <div class=\"card-body text-center\">\n                <i class=\"fas fa-mobile-alt text-primary mb-2\"></i>\n                <h4 class=\"text-uppercase m-0\">Phone</h4>\n                <hr class=\"my-4\">\n                <div class=\"small text-black-50\">\n                  +1(848)252-8552\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n          <div class=\"social d-flex justify-content-center\">\n              <a href=\"#\" class=\"mx-2\">\n                  <a href=\"https://www.linkedin.com/in/satita-vittayaareekul/\"><i class=\"fab fa-linkedin\"></i></a>\n              </a>\n              <a href=\"#\" class=\"mx-2\">\n                  <a href=\"https://github.com/SatitaVitt\"><i class=\"fab fa-github\"></i> </a>\n              </a>\n          </div>\n  </div>\n  <footer class=\"small text-center text-white-50\">\n    <div class=\"container\">\n      Copyright &copy; Satita's Website 2023\n    </div>\n  </footer>\n</section>","export * from './login.component';\n","export * from './alert.component';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-draw',\n  templateUrl: './draw.component.html',\n  styleUrls: ['./draw.component.css']\n})\nexport class DrawComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>draw works!</p>\n","//import { OnInit , Input} from '@angular/core';\nimport { Component } from '@angular/core';\n//import { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services';\n\n@Component({ \n    selector: 'app', \n    templateUrl: 'app.component.html',\n    styleUrls: ['./app.component.css'] \n })\n\nexport class AppComponent {\n  \n     currentUser: any;\n     constructor(\n        public router: Router,\n        //private formBuilder: FormBuilder,\n        private authenticationService: AuthenticationService\n    ) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    }\n     \n/*\n    ngOnInit() {\n        /*this.registerForm = this.formBuilder.group({\n            comment: []\n        });*/\n    \n\n\n\n    // convenience getter for easy access to form fields\n    //get f() { return this.registerForm.controls; }\n/*\n    onSubmit() {\n        this.submitted = true;\n\n        this.loading = true;*/\n        /*\n        this.userService.register(this.registerForm.value)\n            .pipe(first())*/\n            \n   /* }\n*/\n    logout() {\n        this.authenticationService.logout();\n        this.router.navigate(['/login']);\n    }\n    //registerForm: FormGroup;\n    loading = false;\n    //submitted = false;\n    //error: string;\n\n}\n","\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n\n<nav class=\"navbar navbar-expand-lg navbar-light fixed-top\" id=\"mainNav\">\n    <div class=\"container\">\n      <a class=\"navbar-brand js-scroll-trigger\" href=\"/\">SATITA VITTAYAAREEKUL</a>\n      <button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        Menu\n        <i class=\"fas fa-bars\"></i>\n      </button>\n      \n      <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n        <ul class=\"navbar-nav ml-auto\">\n          <a class=\"nav-item nav-link\" href=\"https://satitavitt.github.io/TagCloud/\">FunFacts</a>\n          <a class=\"nav-link js-scroll-trigger\" routerLink=\"/blog\">Blog</a>\n          <a class=\"nav-link js-scroll-trigger\" href=\"/draw\">Draws</a>\n          <a class=\"nav-item nav-link\" routerLink=\"/bake\">Baking</a>\n          <a class=\"nav-item nav-link\" routerLink=\"/comments\">Comments</a>\n<!--\n          <ng-sidebar\n            [(opened)]=\"_opened\">\n            <button class=\"demo-control\" (click)=\"_toggleOpened()\">Close sidebar</button>\n            <hr>\n            <a class=\"nav-link js-scroll-trigger\" href=\"#signup\">Contact</a>\n            <a class=\"nav-item nav-link\" routerLink=\"/login\">Login</a>\n            <a class=\"nav-item nav-link\" routerLink=\"/register\">Register</a>\n            <a class=\"nav-item nav-link\" routerLink=\"/userpage\">User</a>\n            <a *ngIf=\"currentUser\" class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n          </ng-sidebar>\n-->       \n          <div class=\"w3-dropdown-hover\">\n            <button class=\"w3-button w3-brown\" style=\"margin-top : 20px\"> Others <i class=\"fa fa-caret-down\"></i></button>\n            <div class=\"w3-dropdown-content w3-bar-block w3-border\">\n              <a class=\"w3-bar-item w3-button\" href=\"#signup\">Contact</a>\n              <a class=\"w3-bar-item w3-button\" routerLink=\"/login\">Login</a>\n              <a class=\"w3-bar-item w3-button\" routerLink=\"/register\">Register</a>\n              <a class=\"w3-bar-item w3-button\" routerLink=\"/userpage\">User</a>\n              \n\n              <a *ngIf=\"currentUser\" class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n            </div>\n          </div> \n  \n        </ul>\n        </div>   \n<!--\n          <button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive01\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            Others\n            <i class=\"fas fa-bars\"></i>\n            <div class=\"collapse navbar-collapse\" id=\"navbarResponsive01\">\n            <a class=\"nav-link js-scroll-trigger\" href=\"#signup\">Contact</a>\n            <a class=\"nav-item nav-link\" routerLink=\"/login\">Login</a>\n            <a class=\"nav-item nav-link\" routerLink=\"/register\">Register</a>\n            <a class=\"nav-item nav-link\" routerLink=\"/userpage\">User</a>\n            <a *ngIf=\"currentUser\" class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n          </div>\n          </button>\n          -->\n    </div>\n</nav>\n\n<!--\n  <header class=\"masthead\">\n    <div class=\"container d-flex h-100 align-items-center\">\n      <div class=\"mx-auto text-center\">\n        <h1 class=\"mx-auto my-0 text-uppercase\">WELCOME</h1>\n        <h2 class=\"text-white-50 mx-auto mt-2 mb-5\">Here are some of the things I have done, feel free to leave a comment or suggestion at the end 🥳</h2>\n        <a href=\"#about\" class=\"btn btn-primary js-scroll-trigger\">Start</a>\n      </div>\n    </div>\n  </header>\n-->\n<!--\n<div *ngIf=\"router.url === '/blog'\">\n   \n    \n    <div class=\"jumbotron jumbotron-fluid\">\n        <div class=\"row\">\n            <div class=\"body\">\n                <alert></alert>\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div> -->\n\n<router-outlet></router-outlet>\n\n<app-footer></app-footer>\n<!--\nfooter, comment, suggestion, and contact\n<section class=\"contact-section navbar-expand-lg contact-section-color\" id=\"contact\">\n    <div class=\"container\">\n        <div class = \"row\">\n          <div class=\"col-md-4 mb-3 mb-md-0\">\n            <div class=\"card py-4 h-100\">\n              <div class=\"card-body text-center\">\n                <i class=\"fas fa-map-marked-alt text-primary mb-2\"></i>\n                <h4 class=\"text-uppercase m-0\">Located At</h4>\n                <hr class=\"my-4\">\n                <div class=\"small text-black-50\">The Hague, The Netherlands</div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-md-4 mb-3 mb-md-0\">\n            <div class=\"card py-4 h-100\">\n              <div class=\"card-body text-center\">\n                <i class=\"fas fa-envelope text-primary mb-2\"></i>\n                <h4 class=\"text-uppercase m-0\">Email</h4>\n                <hr class=\"my-4\">\n                <div class=\"small text-black-50\">\n                  <a href=\"#\">satita.ice.v@gmail.com</a>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-md-4 mb-3 mb-md-0\">\n            <div class=\"card py-4 h-100\">\n              <div class=\"card-body text-center\">\n                <i class=\"fas fa-mobile-alt text-primary mb-2\"></i>\n                <h4 class=\"text-uppercase m-0\">Phone</h4>\n                <hr class=\"my-4\">\n                <div class=\"small text-black-50\">\n                  +1(848)252-8552\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n          <div class=\"social d-flex justify-content-center\">\n              <a href=\"#\" class=\"mx-2\">\n                  <a href=\"https://www.linkedin.com/in/satita-vittayaareekul/\"><i class=\"fab fa-linkedin\"></i></a>\n              </a>\n              <a href=\"#\" class=\"mx-2\">\n                  <a href=\"https://github.com/SatitaVitt\"><i class=\"fab fa-github\"></i> </a>\n              </a>\n          </div>\n  </div>\n  <footer class=\"small text-center text-white-50\">\n    <div class=\"container\">\n      Copyright &copy; Satita's Website 2023\n    </div>\n  </footer>\n</section>\n  \n-->","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n    constructor(private http: HttpClient) { }\n\n    getAll() {\n        return this.http.get<any[]>(`${environment.apiUrl}/users`);\n    }\n\n    register(user) {\n        return this.http.post(`${environment.apiUrl}/users/register`, user);\n    }\n\n    delete(id) {\n        return this.http.delete(`${environment.apiUrl}/users/${id}`);\n    }\n}","export * from './fake-backend';\nexport * from './auth.guard';\nexport * from './jwt.interceptor';\nexport * from './error.interceptor';\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { UserService, AuthenticationService } from '../_services';\n\n@Component({ \n    selector: 'app-userpage',\n    templateUrl: 'userpage.component.html' })\nexport class UserpageComponent implements OnInit {\n    currentUser: any;\n    users = [];\n\n    constructor(\n        \n        private authenticationService: AuthenticationService,\n        private userService: UserService\n        \n    ) {\n        this.currentUser = this.authenticationService.currentUserValue;\n    }\n\n    ngOnInit() {\n        this.loadAllUsers();\n    }\n\n    deleteUser(id: number) {\n        this.userService.delete(id)\n            .pipe(first())\n            .subscribe(() => this.loadAllUsers());\n    }\n\n    private loadAllUsers() {\n        this.userService.getAll()\n            .pipe(first())\n            .subscribe(users => this.users = users);\n    }\n}\n","\n\n<a href=\"/some-page\"><img src=\"src/assets/img/bg-masthead.jpg\" class=\"oversize\" /></a>\n<h1>Hi {{currentUser.firstName}}!</h1>\n<ul>\n    <li *ngFor=\"let user of users\">\n        {{user.username}} ({{user.firstName}} {{user.lastName}})\n         <a (click)=\"deleteUser(user.id)\" class=\"text-danger\">Delete</a>\n    </li>\n</ul>\n\n\n","//import { CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport { NgModule} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClient, HttpClientModule , HTTP_INTERCEPTORS} from '@angular/common/http';\n\n// used to create fake backend\nimport { fakeBackendProvider } from './_helpers';\n\nimport { AppComponent } from './app.component';\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\nimport { HomeComponent } from './home';\nimport { LoginComponent } from './login';\nimport { RegisterComponent } from './register';\nimport { AlertComponent } from './_components';\nimport { UserpageComponent } from './userpage';\nimport { CommentsComponent } from './comments';\nimport { SidebarModule } from 'ng-sidebar';\n//import { BlogComponent } from './blog/blog.component';\nimport { CommonModule } from '@angular/common';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RouterModule } from '@angular/router';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { ScullyLibModule } from '@scullyio/ng-lib';\nimport { BakingComponent } from './baking/baking.component';\nimport { DrawComponent } from './draw/draw.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { TestComponent } from './test/test.component';\n//import { routes } from './app.routing';\n//import {enableProdMode} from '@angular/core';\n\n//import { FunFactComponent } from './fun-fact/fun-fact.component';\n//import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n//import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n    imports: [\n        BrowserModule, \n        ReactiveFormsModule,\n        HttpClientModule,\n        AppRoutingModule,\n        FormsModule,\n        SidebarModule,\n        CommonModule,\n        RouterModule,\n        //RouterModule.forRoot(routes),\n        MarkdownModule.forRoot({ loader: HttpClient }),\n        ScullyLibModule,\n        //BrowserAnimationsModule,\n        \n    ],\n    declarations: [\n        AppComponent,\n        //HomeComponent,\n        LoginComponent,\n        RegisterComponent,\n        AlertComponent,\n        UserpageComponent,\n        CommentsComponent,\n        BakingComponent,\n        DrawComponent,\n        FooterComponent,\n        TestComponent\n        //BlogComponent\n        //FunFactComponent\n    ],\n    //schemas:[CUSTOM_ELEMENTS_SCHEMA],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\n        // provider used to create fake backend\n        fakeBackendProvider\n    ],\n    bootstrap: [AppComponent],\n    \n})\nexport class AppModule { }\n//platformBrowserDynamic().bootstrapModule(AppModule);","import { HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n\n@Component({ \n    selector: 'app-comments', \n    templateUrl: 'comments.component.html',\n    styleUrls: ['./comments.component.css'] \n })\nexport class CommentsComponent {\n    constructor(\n        public router: Router,\n        private formBuilder: FormBuilder,\n    ) {\n    }\n\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            comment: []\n        });\n    }\n    // convenience getter for easy access to form fields\n    get f() { return this.registerForm.controls; }\n\n    onSubmit() {\n        // console.log(\"onSubmit\");\n        // console.log(\"submit - registerform\", this.registerForm);\n\n        this.submitted = true;\n        this.loading = true;\n        // const email = 'satita.ice.v@gmail.com';\n        // const name = 'comments from your personal website!'\n        // const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n        // this.http.post('https://formspree.io/asdlf7asdf',\n        //     { name: name, replyto: email, message: this.registerForm.value.comment },\n        //     { 'headers': headers }).subscribe(\n        //     response => {\n        //         console.log(response);\n        //     }\n        // );\n        /*\n        this.userService.register(this.registerForm.value)\n            .pipe(first())*/\n            \n    }\n\n\n\n    \n    registerForm: FormGroup;\n    loading = false;\n    submitted = false;\n    //error: string;\n    \n}\n","<section class=\"signup-section navbar-expand-lg bg-black bottom\" id=\"signup\">\n\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-10 col-lg-8 mx-auto text-center\">\n\n          <i class=\"far fa-paper-plane fa-2x mb-2 text-white\"></i>\n          <h2 class=\"text-white mb-5\">Comment/Suggestions 🤓</h2>\n          <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n            \n                \n            <div class=\"form-group\">\n                <input type=\"text box\" formControlName=\"comment\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted }\" />\n                <br>\n                <button class=\"button btn-primary\">\n                    Sent!\n                </button>\n                \n            </div>\n        </form>\n\n        </div>\n      </div>\n    </div>\n</section>","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<any>();\n    private keepAfterRouteChange = false;\n\n    constructor(private router: Router) {\n        // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterRouteChange) {\n                    // only keep for a single route change\n                    this.keepAfterRouteChange = false;\n                } else {\n                    // clear alert message\n                    this.clear();\n                }\n            }\n        });\n    }\n\n    getAlert(): Observable<any> {\n        return this.subject.asObservable();\n    }\n\n    success(message: string, keepAfterRouteChange = false) {\n        this.keepAfterRouteChange = keepAfterRouteChange;\n        this.subject.next({ type: 'success', text: message });\n    }\n\n    error(message: string, keepAfterRouteChange = false) {\n        this.keepAfterRouteChange = keepAfterRouteChange;\n        this.subject.next({ type: 'error', text: message });\n    }\n\n    clear() {\n        // clear by calling subject.next() without parameters\n        this.subject.next();\n    }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n<div class=\"footer\">\n  <div class=\"bubbles\">\n    <div class=\"bubble\" style=\"--size:3.7593432177590165rem; --distance:8.628241878938002rem; --position:8.807552671567807%; --time:2.392237598206633s; --delay:-2.6841591051927627s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.307505469829502rem; --distance:9.166732934472273rem; --position:7.903056503785713%; --time:2.7788771904269773s; --delay:-2.810423398443583s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.449906872138383rem; --distance:9.637839115478204rem; --position:13.576429590885834%; --time:2.8110655883564584s; --delay:-3.8744198410108175s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.073452615289758rem; --distance:8.675783872834053rem; --position:26.657511769386844%; --time:3.5365429280862255s; --delay:-3.736336785606995s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.467339051929901rem; --distance:9.83386812911212rem; --position:55.15462907105375%; --time:3.6727425239414875s; --delay:-2.983973294560614s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.3247733100432413rem; --distance:6.771308467539967rem; --position:6.80703694112902%; --time:2.246933033445681s; --delay:-2.8084357712477033s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.375892223673432rem; --distance:7.113311991479914rem; --position:84.82254488836905%; --time:3.024582167563186s; --delay:-2.915344274621145s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.211777797916427rem; --distance:6.064118260030998rem; --position:59.25782437075797%; --time:3.8795333812227555s; --delay:-3.4337727600751493s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.775611264070439rem; --distance:9.555313418940461rem; --position:24.484070213030968%; --time:3.1621542459669185s; --delay:-3.800045302344652s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.466346709976185rem; --distance:9.53121118666688rem; --position:2.1801062407120515%; --time:2.177457787082126s; --delay:-3.7732398258328863s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.736329487401851rem; --distance:7.374231643486308rem; --position:17.82439837668663%; --time:2.886704224694804s; --delay:-3.9542717321471055s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.738615460920556rem; --distance:8.447557944370885rem; --position:35.3714495660613%; --time:3.4605604369557597s; --delay:-2.615622201745073s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.1031025399447794rem; --distance:9.060733697773845rem; --position:3.6216357331452382%; --time:3.8321560001638657s; --delay:-3.2980261675012996s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.309551416766909rem; --distance:7.116527532456447rem; --position:25.215445533928648%; --time:3.675302229198492s; --delay:-3.4017982811782006s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.974399259800122rem; --distance:8.014023806602736rem; --position:93.31055866055289%; --time:3.5766329000518033s; --delay:-3.069225942573383s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.283552444008126rem; --distance:6.6781856745844195rem; --position:100.98492465378483%; --time:3.8925793613339645s; --delay:-3.6637057811736278s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.912459546364805rem; --distance:7.876680773756956rem; --position:85.5303072597473%; --time:2.754511783104206s; --delay:-2.80198045495687s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.098615528049115rem; --distance:7.938301974715154rem; --position:34.93332017885895%; --time:2.5349961264017913s; --delay:-2.5772689147514423s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.1514688807701026rem; --distance:7.992539167110263rem; --position:55.846647101104736%; --time:2.9917394043285657s; --delay:-2.724776431623505s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.823684615105062rem; --distance:9.389743060831224rem; --position:7.015058270680402%; --time:2.194858517463796s; --delay:-3.390438961791506s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.615235713140745rem; --distance:8.755365563195522rem; --position:74.2274806307937%; --time:3.7926115815132273s; --delay:-2.167783089388722s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.715308840927035rem; --distance:9.799441955198937rem; --position:27.99827787863633%; --time:3.2746167450939567s; --delay:-2.316100544852564s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.2207024196170293rem; --distance:9.538364298864344rem; --position:18.232994541884253%; --time:3.168686212923326s; --delay:-2.1373748053571218s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.534638582967318rem; --distance:8.84037329310705rem; --position:36.03129490104717%; --time:3.1269241520582187s; --delay:-2.9064778641538718s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.348087166428936rem; --distance:7.080652429554957rem; --position:58.67897846261734%; --time:2.88128438763002s; --delay:-2.7670265499717335s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.0879140333302937rem; --distance:8.761846466569615rem; --position:80.51396836615379%; --time:3.2980570363842676s; --delay:-3.555753862513721s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.391761526631986rem; --distance:6.544147485658395rem; --position:46.72902572901436%; --time:3.297044035708918s; --delay:-2.444431281204056s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.315428396287753rem; --distance:8.026932443418042rem; --position:66.7588739677049%; --time:2.0804620207832736s; --delay:-3.510372262562722s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.7662366518421857rem; --distance:7.957995796739397rem; --position:96.49924593477888%; --time:3.4996910528753133s; --delay:-3.725751533317681s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.693553834131858rem; --distance:9.928403161324695rem; --position:71.79530962648447%; --time:2.0486391334930047s; --delay:-2.5403587684661906s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.3613783497368184rem; --distance:7.862845490121742rem; --position:50.813241851794906%; --time:3.618717962810517s; --delay:-3.0834659975717127s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.941444743174724rem; --distance:7.140275594006192rem; --position:74.32032885732829%; --time:2.4139005584623296s; --delay:-3.319431815763208s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.939566314627914rem; --distance:6.25247682056398rem; --position:6.369474638951393%; --time:3.8368928146170096s; --delay:-2.6797000527545536s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.344410617062074rem; --distance:9.732949942134779rem; --position:51.0534048279326%; --time:3.0478105345016226s; --delay:-2.6862672155062635s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.489276436340208rem; --distance:6.034383555326936rem; --position:49.79427814431025%; --time:3.6950017560878883s; --delay:-3.5189734446951957s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.5047718190347306rem; --distance:9.90330987409253rem; --position:84.8491279720323%; --time:2.291677964385803s; --delay:-2.5739131349690814s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.419093605729257rem; --distance:7.015641128001218rem; --position:69.99329601733888%; --time:2.6902295871364186s; --delay:-2.1712639063674675s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.710631073978808rem; --distance:6.82550480266256rem; --position:73.3422238374178%; --time:2.5601477075448376s; --delay:-3.309539875478728s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.188069902628207rem; --distance:9.81854516260069rem; --position:45.895090527071666%; --time:2.0728384361275634s; --delay:-2.2325502362966865s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.027014652589974rem; --distance:8.771193230801025rem; --position:7.8019734510945185%; --time:3.3220586829465084s; --delay:-3.764763672899934s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.545787651477145rem; --distance:6.293198141838115rem; --position:16.01175222902296%; --time:2.2052858400983095s; --delay:-2.948449212848459s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.043149653609407rem; --distance:9.47717506658259rem; --position:46.82348380380382%; --time:2.549046963766341s; --delay:-3.353902954204284s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.921851906841323rem; --distance:9.551410296881262rem; --position:27.461584845905826%; --time:2.891636337063517s; --delay:-2.193460018775889s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.613485719317484rem; --distance:9.78867163877165rem; --position:104.57137026127785%; --time:2.079067237121752s; --delay:-2.2642068460690505s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.8904236912767916rem; --distance:8.338644647046813rem; --position:74.73511712749861%; --time:2.183655556054666s; --delay:-2.7131819625915514s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.9228175725209695rem; --distance:6.798559463329744rem; --position:3.7809365675171094%; --time:3.773210232657258s; --delay:-2.482611845543187s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.1639231839466255rem; --distance:8.658492381911199rem; --position:72.36753806359232%; --time:3.011377244599559s; --delay:-3.3776441860695243s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.351107074609764rem; --distance:6.584217196896571rem; --position:2.767300211710289%; --time:3.28822054302236s; --delay:-2.8548295159003203s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.032436154058341rem; --distance:7.533330584602583rem; --position:36.12456736471272%; --time:2.2404043031066485s; --delay:-2.8946408685046037s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.579719680099979rem; --distance:7.213387538109399rem; --position:59.142031564888214%; --time:2.280813689457722s; --delay:-2.573773145465262s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.220577188978853rem; --distance:8.425039940275017rem; --position:57.21747964955772%; --time:2.900429838099123s; --delay:-2.591987051342719s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.323181473012899rem; --distance:9.046521241917663rem; --position:52.1468222761%; --time:2.04510957353057s; --delay:-2.3076757549734586s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.409529076091697rem; --distance:9.38818139865164rem; --position:19.88694821206155%; --time:2.3029975369141926s; --delay:-2.382377192211105s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.5203769047871605rem; --distance:7.685823072393987rem; --position:2.1192576011821007%; --time:3.7002989378173754s; --delay:-2.007853932867367s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.204428713237992rem; --distance:9.76099979249085rem; --position:60.65745962636352%; --time:3.0164058007071186s; --delay:-3.4618369655559684s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.877680184662316rem; --distance:7.7159672656914955rem; --position:82.87870388656123%; --time:3.2601363659872282s; --delay:-2.175341482947467s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.327093667954192rem; --distance:7.18650235504476rem; --position:83.74754280304715%; --time:3.7460733299180546s; --delay:-3.6196422266261816s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.671354284220935rem; --distance:8.712758794855224rem; --position:23.993402928238353%; --time:2.0179548083407557s; --delay:-3.1328322442329424s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.819760514847507rem; --distance:6.825539740994125rem; --position:63.11722283975696%; --time:3.88257249693134s; --delay:-2.015539273161804s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.552078400390493rem; --distance:6.181642370357801rem; --position:82.71371642707946%; --time:3.0432067532295393s; --delay:-3.6122580841026446s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.174557449197076rem; --distance:9.118063336207825rem; --position:12.589363526608906%; --time:2.446316203341238s; --delay:-3.281340768377026s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.200899872884274rem; --distance:7.718124280076883rem; --position:32.21968861894401%; --time:3.443588012761509s; --delay:-2.953382153361297s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.7572765102979204rem; --distance:9.552053289805617rem; --position:61.3258387528588%; --time:3.5288588355722945s; --delay:-2.223580425097618s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.2571790504306772rem; --distance:8.443212897912654rem; --position:7.543219309724856%; --time:2.8827473982855922s; --delay:-3.457256279229811s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.7663525258034314rem; --distance:6.633305018802297rem; --position:40.680774719306854%; --time:2.4654360947483576s; --delay:-2.606192615156918s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.224245653246773rem; --distance:6.587967467355666rem; --position:56.94712140599111%; --time:3.625751113124175s; --delay:-3.810574211131756s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.1876963299825185rem; --distance:6.149140541037105rem; --position:88.07294249466293%; --time:2.9689153852729873s; --delay:-3.7759519292029498s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.977418843375048rem; --distance:9.27709641383169rem; --position:3.641543438651418%; --time:3.128072341683116s; --delay:-2.1621605313602412s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.736449799534896rem; --distance:6.1485970958789204rem; --position:39.638545875584484%; --time:2.4090691453170545s; --delay:-3.893457801904555s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.276163264501303rem; --distance:6.165642934688972rem; --position:85.40779846970663%; --time:2.6168230977303484s; --delay:-2.288106613282232s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.922500284611771rem; --distance:7.989976586201775rem; --position:-3.19016365123709%; --time:2.202554556078911s; --delay:-3.15237916852558s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.3501686379680518rem; --distance:8.978542557510613rem; --position:16.27327959158674%; --time:2.929618114488067s; --delay:-3.1233689270054077s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.771863595244164rem; --distance:6.220912546965624rem; --position:84.24457055808195%; --time:3.878122853082688s; --delay:-3.03375285446967s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.765683303038532rem; --distance:8.451629239526113rem; --position:65.3797526468522%; --time:3.5854890252115594s; --delay:-2.105981443700551s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.652299610655185rem; --distance:9.293640394336926rem; --position:63.843561453941476%; --time:3.9310363585271557s; --delay:-2.140950744102301s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.3144536931572315rem; --distance:8.721228316443305rem; --position:59.36695850186018%; --time:2.956812681269985s; --delay:-3.516723675246009s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.130450218957808rem; --distance:7.9079160399725605rem; --position:85.48443873055935%; --time:3.496529600589106s; --delay:-3.3272268222356836s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.80022210879555rem; --distance:7.093043623726971rem; --position:50.518327837759145%; --time:2.958235441153042s; --delay:-3.0031436644086s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.875741963828738rem; --distance:7.0844904128706645rem; --position:81.51445268752482%; --time:3.4643464603578424s; --delay:-2.2240961627944587s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.569054133576495rem; --distance:9.502299474332066rem; --position:35.97161193328464%; --time:3.615155802816784s; --delay:-2.5986437474179476s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.895053020372705rem; --distance:8.799841059082315rem; --position:88.00798657598342%; --time:2.241170039031009s; --delay:-3.8974450123124376s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.811420500161731rem; --distance:7.665355406032294rem; --position:100.08579578762296%; --time:2.875667316899252s; --delay:-3.8479777351572513s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.2009275262599983rem; --distance:7.797563827322363rem; --position:2.4363872447604766%; --time:2.2774131910674718s; --delay:-2.8950608376088054s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.066864411031623rem; --distance:8.25304002855724rem; --position:52.25413589796686%; --time:2.8248561589130032s; --delay:-2.7721470729442577s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.7903416041928226rem; --distance:9.241126953040872rem; --position:50.24037795154383%; --time:2.766623778040245s; --delay:-3.8183600999763523s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.274366310679815rem; --distance:8.326796139862132rem; --position:37.306485388835576%; --time:3.6251225831044s; --delay:-2.2273058140759945s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.2090203771126253rem; --distance:9.457530284655416rem; --position:58.48568577089554%; --time:2.8134482269252605s; --delay:-2.1852066331345035s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.543415589063627rem; --distance:7.547850630230498rem; --position:58.01759103843435%; --time:3.487368419552444s; --delay:-2.1373823260619607s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.875404998553611rem; --distance:6.266001687539864rem; --position:87.28431074644432%; --time:3.044877352649832s; --delay:-2.074440564016979s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.5385776427685425rem; --distance:9.201225472846998rem; --position:94.76937149289964%; --time:2.4680452637580523s; --delay:-3.250058758864415s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.863403880352375rem; --distance:7.100801619122125rem; --position:42.27774958756954%; --time:3.382638358099691s; --delay:-3.214749162558232s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.7870879654737566rem; --distance:8.753802346279146rem; --position:32.98309846861906%; --time:3.861719137142411s; --delay:-3.1644616454295376s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.307670550312824rem; --distance:7.477856323421132rem; --position:70.54029494509695%; --time:3.937788733578442s; --delay:-2.3812273508260056s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.719611836211768rem; --distance:6.729802937183426rem; --position:28.527161936025756%; --time:2.191339605306556s; --delay:-3.1224581839908563s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.765114737955095rem; --distance:9.891567718849608rem; --position:46.20444887798745%; --time:2.8861486905108364s; --delay:-3.8372473543752914s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.584776161551865rem; --distance:9.37285606861984rem; --position:98.04680527738608%; --time:2.319010511830073s; --delay:-2.048747242635806s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.371612536025371rem; --distance:9.111269993549358rem; --position:45.88753868835014%; --time:2.2303857021608606s; --delay:-2.919331817640428s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.043763000728013rem; --distance:9.597119482865487rem; --position:98.58020328698238%; --time:2.8780232438406923s; --delay:-3.466368730054849s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.134653693622794rem; --distance:9.06665895771518rem; --position:80.97511494894238%; --time:2.29373363572581s; --delay:-3.9229605455643313s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.791319312746573rem; --distance:6.972852697161167rem; --position:13.339035088070545%; --time:2.8919669154814334s; --delay:-3.9497761117094017s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.640718449240696rem; --distance:6.817039916013897rem; --position:36.50106836371098%; --time:3.4355561464310895s; --delay:-2.9186166848541286s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.380464244725346rem; --distance:7.448284002926025rem; --position:96.77681294410097%; --time:2.7984332650639567s; --delay:-3.6374123948379253s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.54359773813942rem; --distance:6.915883201648101rem; --position:71.89257244153542%; --time:3.5582216522795456s; --delay:-3.232207514550281s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.00751249992799rem; --distance:8.541891454586104rem; --position:46.49200874913734%; --time:3.497567276268393s; --delay:-2.691653625043603s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.32459650187275rem; --distance:6.1458952521803765rem; --position:28.712432807552055%; --time:2.1468823756374746s; --delay:-2.5985572488494304s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.007472452087712rem; --distance:9.815497981083006rem; --position:-0.453853068798173%; --time:3.9751162551892754s; --delay:-2.4254526497729554s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.9938475885351234rem; --distance:6.2355597149372874rem; --position:77.26639233465924%; --time:2.6497745246603697s; --delay:-2.1982602973002376s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.799285161163481rem; --distance:9.849190168307345rem; --position:1.2090131340548123%; --time:2.782663967475841s; --delay:-2.845521456006673s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.688335724363594rem; --distance:6.265579612522652rem; --position:13.012592085099676%; --time:3.5937538045284594s; --delay:-3.836641325604178s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.682819390002247rem; --distance:7.074630507054261rem; --position:0.7855882781373076%; --time:3.109429306997052s; --delay:-3.0821375939559736s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.888004296166116rem; --distance:7.432169515631377rem; --position:20.15512420616027%; --time:3.65371506154228s; --delay:-3.1812607032111377s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.2874103020562826rem; --distance:6.52421803187308rem; --position:88.70654142396162%; --time:2.6316661045511323s; --delay:-3.4676771620955416s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.34847044440961rem; --distance:7.977977430496788rem; --position:54.60110214903224%; --time:2.3461766506878403s; --delay:-2.098829455711571s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.1620789369800812rem; --distance:7.254844827043202rem; --position:92.26620306882951%; --time:3.9628124918641343s; --delay:-2.650562593850537s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.089595403081388rem; --distance:6.174478467237354rem; --position:79.14338030777714%; --time:2.7207018330452435s; --delay:-3.161275874154203s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.353538211867996rem; --distance:7.499308284257642rem; --position:4.073907691991607%; --time:2.228882394405827s; --delay:-2.0102925384538417s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.127503671132547rem; --distance:9.456211723929954rem; --position:93.29939084403604%; --time:3.794432845292401s; --delay:-2.4510083727714136s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.171172780692739rem; --distance:7.589872283038543rem; --position:41.61255078565791%; --time:3.3561247924222517s; --delay:-2.8094119191709104s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.393575346559479rem; --distance:9.4437065772897rem; --position:0.6521881973843318%; --time:3.178664274153007s; --delay:-2.2697934447273083s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.2194106473791395rem; --distance:7.733713393034888rem; --position:56.974176282313444%; --time:3.5004134762704715s; --delay:-3.3899993615843576s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.229613660537953rem; --distance:8.751095204230658rem; --position:48.51843845076072%; --time:3.5783062042654556s; --delay:-3.6600359407783247s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.1770024694120567rem; --distance:7.054549031584209rem; --position:47.27545753381206%; --time:2.2429180496931505s; --delay:-2.5847146924676445s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.401155971781889rem; --distance:9.330707919443636rem; --position:38.703379655254516%; --time:2.604419706164605s; --delay:-3.540849430321651s;\"></div>\n    <div class=\"bubble\" style=\"--size:2.739448381968299rem; --distance:9.663531303628918rem; --position:29.13122289451055%; --time:3.1127927708080825s; --delay:-2.8341688325429955s;\"></div>\n    <div class=\"bubble\" style=\"--size:4.52497113717731rem; --distance:6.295352387651403rem; --position:41.995088511159324%; --time:3.9454094234199424s; --delay:-3.720102377650252s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.714356080799395rem; --distance:6.667874625261899rem; --position:2.6630740326301305%; --time:2.316004189265192s; --delay:-2.576002940641904s;\"></div>\n    <div class=\"bubble\" style=\"--size:5.4755829566231045rem; --distance:9.95336790911246rem; --position:73.9554791310655%; --time:2.1263228309425415s; --delay:-2.4904967780591867s;\"></div>\n    <div class=\"bubble\" style=\"--size:3.3430135158139374rem; --distance:8.453261357218981rem; --position:74.95821706857923%; --time:3.0023955473223207s; --delay:-2.855988107427948s;\"></div>\n  </div>\n  <div class=\"content\">\n    <div>\n        <div><b>Located At</b><a href=\"#\">The Hague, The Netherlands</a></div>\n        <div><b>Email</b><a href=\"#\">satita.ice.v@gmail.com</a></div>\n        <div>\n            <a href=\"#\" class=\"mx-2\">\n                <a href=\"https://www.linkedin.com/in/satita-vittayaareekul/\"><i class=\"fab fa-linkedin\"></i></a>\n            </a>\n            <a href=\"#\" class=\"mx-2\">\n                <a href=\"https://github.com/SatitaVitt\"><i class=\"fab fa-github\"></i> </a>\n            </a>\n        </div>\n        \n    </div>\n    <div><a class=\"image\" href=\"https://codepen.io/z-\" target=\"_blank\" style=\"background-image: url(&quot;assets/img/ZEPETO1.PNG&quot;)\"></a>\n        <p>&copy; Satita's Website 2023</p>\n    </div>\n  </div>\n</div>\n<svg style=\"position: fixed; top: 100vh\">\n  <defs>\n    <filter id=\"blob\">\n      <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"blur\"></feGaussianBlur>\n      <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9\" result=\"blob\"></feColorMatrix>\n      <!--feComposite(in=\"SourceGraphic\" in2=\"blob\" operator=\"atop\") //After reviewing this after years I can't remember why I added this but it isn't necessary for the blob effect-->\n    </filter>\n  </defs>\n</svg>\n</body>","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        let currentUser = this.authenticationService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: { \n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}","export * from './register.component';\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n            \n            const error = err.error.message || err.statusText;\n            //extracts the error message from the error response object or defaults to the response status text if there isn't an error message\n            return throwError(error);\n        }))\n    }\n}","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private currentUserSubject: BehaviorSubject<any>;\n    public currentUser: Observable<any>;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n    //enables the user to stay logged in between page refreshes or after the browser is closed.\n\n    public get currentUserValue() {\n        return this.currentUserSubject.value;\n    }\n\n    login(username, password) {\n        return this.http.post<any>(`${environment.apiUrl}/users/authenticate`, { username, password })\n            .pipe(map(user => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                this.currentUserSubject.next(user);\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage and set current user to null\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n}","export * from './comments.component';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BakingComponent } from './baking/baking.component';\n//mport { BlogComponent } from './blog/blog.component';\n//import { BlogPostViewComponent } from './blog/post/blog-post-view.component';\nimport { CommentsComponent } from './comments';\nimport { DrawComponent } from './draw/draw.component';\n//import { FunFactComponent } from './fun-fact/fun-fact.component';\n//import { FunfactsComponent } from './funfacts';\n\nimport { HomeComponent } from './home';\nimport { LoginComponent } from './login';\nimport { RegisterComponent } from './register';\nimport { UserpageComponent } from './userpage';\nimport { AuthGuard } from './_helpers';\n\nconst routes: Routes = [\n    \n    //{ path: '', component: HomeComponent , canActivate: [AuthGuard] },\n    { path: '', component: HomeComponent },\n    /*To control access to a route with the auth guard you add it to the canActivate array \n    in the route's configuration. The route guards in the canActivate array are run by Angular \n    to decide if the route can be \"activated\", if all of the route guards return true navigation \n    is allowed to continue, but if any of them return false navigation is cancelled.\n    */\n    { path: 'login', component: LoginComponent },\n    { path: 'register', component: RegisterComponent },\n    { path: 'userpage', component: UserpageComponent , canActivate: [AuthGuard] },\n    { path: 'comments', component: CommentsComponent},\n    // { path: 'baking', component: BakingComponent},\n    { path: 'draw', component: DrawComponent},\n    { path: 'blog', loadChildren: () => import('./blog/blog.module').then(m => m.BlogModule) },\n    \n    { path: 'bake', loadChildren: () => import('./bake/bake.module').then(m => m.BakeModule) },\n    \n    //{ path: 'post', loadChildren: () => import('./post/post.module').then(m => m.PostModule) },\n    /*{ path: 'blogpost', component: BlogPostViewComponent},\n    //{ path: 'blog', component: BlogViewComponent},\n    //{ path: 'funfact', component: FunFactComponent},\n    { path: \"blog\", loadChildren: () =>\n            import(\"./blog/blog.module\").then(m => m.BlogModule)\n    },*/\n\n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations:[],\n    imports: [\n        CommonModule,\n        RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n  })\n  export class AppRoutingModule { }\n  \n\n//export const AppRoutingModule = RouterModule.forRoot(routes);","import { Component , OnInit } from '@angular/core';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService, AlertService } from '../_services'\n\n@Component({ \n   \n    templateUrl: 'login.component.html' ,\n    styleUrls: ['./login.component.css']\n\n})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    //error: string;\n    //success: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private alertService: AlertService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) { \n            this.router.navigate(['/userpage']);\n        }\n    }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n\n        // show success message on registration\n        /*\n        if (this.route.snapshot.queryParams['registered']) {\n            this.success = 'Registration successful';\n        }\n        */\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        //this.error = null;\n        //this.success = null;\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    //this.error = error;\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n}","<!--<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n<div *ngIf=\"success\" class=\"alert alert-success\">{{success}}</div>-->\n<link href=\"https://fonts.googleapis.com/css2?family=Dancing+Script&display=swap\" rel=\"stylesheet\">\n\n<header class=\"masthead\">\n    <!--flying birds-->\n    <div class=\"bird-container bird-container--one\">\n        <div class=\"bird bird--one\"></div>\n    </div>\n    <div class=\"bird-container bird-container--two\">\n        <div class=\"bird bird--two\"></div>\n    </div>   \n    <div class=\"bird-container bird-container--three\">\n        <div class=\"bird bird--three\"></div>\n    </div>\n    <div class=\"bird-container bird-container--four\">\n        <div class=\"bird bird--four\"></div>\n\t</div>\n\n    <div class=\"container d-flex h-100 align-items-center\">\n        <div class=\"mx-auto text-center\">\n            <h1 class=\"mx-auto my-0 text-uppercase\">LOGIN</h1> \n            <br>\n            <p> For testing API, Authentication, JWT token feature purpose only :)\n            </p>\n            <br>\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <label for=\"username\" style=\"color: white\">Username</label>\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\" style=\"color: white\">Password</label>\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <button [disabled]=\"loading\" class=\"btn btn-primary\" style=\"background-color:#A3E4D7\">\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                        Login\n                    </button>\n                    <a routerLink=\"/register\" class=\"btn btn-link\" style=\"color: #A3E4D7\">Register</a>\n                </div>\n            </form>\n        </div>\n    </div>\n\n</header>\n","export * from './home.component';\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}